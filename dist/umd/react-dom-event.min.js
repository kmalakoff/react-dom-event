!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).reactDomEvent={},e.React)}(this,(function(e,t){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(t),o=r.default.createContext(void 0);e.EventContext=o,e.EventProvider=function(e){var t=e.events,n=void 0===t?["click"]:t,u=e.children,i=function(e){c.forEach((function(t){return t(e)}))},c=r.default.useState([])[0];return r.default.useEffect((function(){return n.forEach((function(e){return window.document.addEventListener(e,i,!0)})),function(){return n.forEach((function(e){return window.document.removeEventListener(e,i,!0)}))}})),r.default.createElement(o.Provider,{value:{subscribe:function(e){return c.push(e),function(){return c.splice(c.indexOf(e),1)}}}},u)},e.useEvent=function(e,t){var n=r.default.useContext(o);if(!n.subscribe)throw new Error("react-dom-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-dom-event");r.default.useEffect((function(){return n.subscribe(e)}),[n.subscribe,e].concat(t))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=react-dom-event.min.js.map
